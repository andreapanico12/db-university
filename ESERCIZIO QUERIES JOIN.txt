ESERCIZIO: QUERIES JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.id, `students`.name, `students`.surname
FROM `students`
INNER JOIN `degrees` ON `students`.degree_id = `degrees`.id
WHERE `degrees`.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze


SELECT `degrees`.name, `degrees`.level, `departments`.name AS `departments_name`
FROM `degrees`
INNER JOIN `departments` ON `degrees`.department_id = `departments`.id
WHERE `degrees`.level = 'magistrale' AND `departments`.name = 'Dipartimento di Neuroscienze';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `courses`.name, `courses`.cfu, `teachers`.name AS `teacher_name`, `teachers`.surname AS `teacher_surname`
FROM `courses`
INNER JOIN `course_teacher` ON `course_teacher`.course_id = `courses`.id
INNER JOIN `teachers` ON `teachers`.id = `course_teacher`.teacher_id
WHERE `teachers`.name = 'Fulvio' AND `teachers`.surname = 'Amato';

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

SELECT `students`.surname AS `student_surname`, `students`.name AS `student_name`, `degrees`.*, `departments`.name AS `department_name`
FROM `students`
INNER JOIN `degrees` ON `degrees`.id = `students`.degree_id
INNER JOIN `departments` ON `departments`.id = `degrees`.department_id
ORDER BY `students`.surname ASC, `students`.name ASC;

5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.name AS `degree_name`,
	`courses`.name AS `course_name`,
        `teachers`.name AS `teacher_name`,
        `teachers`.surname AS `teacher_surname`
FROM `degrees`
INNER JOIN `courses` ON `degrees`.id = `courses`.degree_id
INNER JOIN `course_teacher` ON `courses`.id = `course_teacher`.course_id
INNER JOIN `teachers` ON `teachers`.id = `course_teacher`.teacher_id
ORDER BY `degrees`.name ASC;

6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

SELECT `teachers`.name AS `teacher_name`,
	   `teachers`.surname AS `teacher_surname`,
       `departments`.name AS `department_name`
FROM `teachers`
INNER JOIN `course_teacher` ON `teachers`.id = `course_teacher`.teacher_id
INNER JOIN `courses` ON `course_teacher`.course_id = `courses`.id
INNER JOIN `degrees` ON `courses`.degree_id = `degrees`.id
INNER JOIN `departments` ON `degrees`.department_id = `departments`.id
WHERE `departments`.name = 'Dipartimento di Matematica'
ORDER BY `teachers`.surname ASC;


7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.


SELECT 
    `students`.name AS `student_name`,
    `students`.surname AS `student_surname`,
    `exams`.id AS `exam_id`,
    COUNT(`exam_student`.exam_id) AS `num_attempts`,
    MAX(`exam_student`.vote) AS `max_vote`
FROM `students`
INNER JOIN `exam_student` ON `students`.id = `exam_student`.student_id
INNER JOIN `exams` ON `exam_student`.exam_id = `exams`.id
GROUP BY `students`.id, `students`.name, `students`.surname, `exams`.id
HAVING MIN(`exam_student`.vote) >= 18
ORDER BY `students`.surname ASC, `students`.name ASC, `exams`.id ASC;




















